[{"/Users/liuguilin/Desktop/web-things/gateway/app/src/index.js":"1","/Users/liuguilin/Desktop/web-things/gateway/app/src/App.js":"2","/Users/liuguilin/Desktop/web-things/gateway/app/src/reportWebVitals.js":"3","/Users/liuguilin/Desktop/web-things/gateway/app/src/page/home.js":"4","/Users/liuguilin/Desktop/web-things/gateway/app/src/temp/topbar.js":"5","/Users/liuguilin/Desktop/web-things/gateway/app/src/temp/sidebar.js":"6","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/thing.js":"7","/Users/liuguilin/Desktop/web-things/gateway/app/src/js/things-reducer.js":"8","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/capability/light.js":"9","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/property/on-off.js":"10","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/property/brightness.js":"11","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/navbar.js":"12"},{"size":500,"mtime":1611684325888,"results":"13","hashOfConfig":"14"},{"size":146,"mtime":1612506832195,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611683874353,"results":"16","hashOfConfig":"14"},{"size":1243,"mtime":1612506911968,"results":"17","hashOfConfig":"14"},{"size":8171,"mtime":1612248080387,"results":"18","hashOfConfig":"14"},{"size":7934,"mtime":1612072041448,"results":"19","hashOfConfig":"14"},{"size":3543,"mtime":1612864536981,"results":"20","hashOfConfig":"14"},{"size":850,"mtime":1612259177785,"results":"21","hashOfConfig":"14"},{"size":2650,"mtime":1612866449461,"results":"22","hashOfConfig":"14"},{"size":904,"mtime":1612259993544,"results":"23","hashOfConfig":"14"},{"size":1002,"mtime":1612259980503,"results":"24","hashOfConfig":"14"},{"size":13193,"mtime":1612506832223,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"hm9ca5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/liuguilin/Desktop/web-things/gateway/app/src/index.js",[],["57","58"],"/Users/liuguilin/Desktop/web-things/gateway/app/src/App.js",[],"/Users/liuguilin/Desktop/web-things/gateway/app/src/reportWebVitals.js",[],"/Users/liuguilin/Desktop/web-things/gateway/app/src/page/home.js",[],"/Users/liuguilin/Desktop/web-things/gateway/app/src/temp/topbar.js",[],["59","60"],"/Users/liuguilin/Desktop/web-things/gateway/app/src/temp/sidebar.js",["61"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport TopBar from \"./topbar\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function SideBar() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Persistent drawer\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n\n                <List>\n                    <ListItem button key={\"home\"}>\n                        <ListItemIcon>\n                            <HomeIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Home\"/>\n                    </ListItem>\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n\n                <Typography paragraph>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n                    ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n                    facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n                    gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n                    donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n                    adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n                    Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n                    imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n                    arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n                    donec massa sapien faucibus et molestie ac.\n                </Typography>\n                <Typography paragraph>\n                    Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n                    facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n                    tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n                    consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n                    vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n                    hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n                    tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n                    nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n                    accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n                </Typography>\n            </main>\n        </div>\n    );\n}\n","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/thing.js",["62","63","64","65"],"/Users/liuguilin/Desktop/web-things/gateway/app/src/js/things-reducer.js",["66"],"import React from \"react\";\n\nexport const Actions = {\n    addThing: \"addonThing\",\n    propertyStatus: \"propertyStatus\"\n}\n\nexport default function ThingsReducer(context, action) {\n    console.log(\"action:\", action)\n    switch (action.messageType) {\n        case Actions.propertyStatus:\n            return context\n        case Actions.addThing:\n            console.log(\"thingsReducer addThing:\", action)\n            console.log(\"state\", context)\n            let newThing = action.thing\n            for (let thing of context) {\n                if (thing.id === newThing.id) {\n                    return context\n                }\n            }\n            let newThings = context\n            newThings.push(newThing)\n            console.log(\"newThings:\", newThings)\n            return [...newThings]\n        default:\n            return context\n    }\n}\n\n\n\n","/Users/liuguilin/Desktop/web-things/gateway/app/src/component/capability/light.js",["67","68","69"],"/Users/liuguilin/Desktop/web-things/gateway/app/src/component/property/on-off.js",["70","71"],"import React, {useContext} from \"react\";\nimport Switch from '@material-ui/core/Switch';\nimport {ThingsContext} from \"../../page/home\";\n\nconst OnOffProperty = (props) => {\n\n    const {name, value} = props\n\n    const {setPropertyValue} = useContext(ThingsContext)\n\n    const [state, setState] = React.useState(props.data);\n\n    const handleChange = (event) => {\n        setState({...state, value: !event.target.checked})\n        setPropertyValue(state)\n    };\n\n\n    return (\n        <>\n            <div id={\"property-item\"} className={\"property-on-off-switch\"}>\n                <Switch\n                    checked={!state.value}\n                    onChange={handleChange}\n                    color=\"primary\"\n                    name=\"on-off-switch\"\n                    inputProps={{'aria-label': 'primary checkbox'}}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default OnOffProperty\n",["72","73"],"/Users/liuguilin/Desktop/web-things/gateway/app/src/component/property/brightness.js",[],"/Users/liuguilin/Desktop/web-things/gateway/app/src/component/navbar.js",["74"],"import React from 'react';\nimport {fade, makeStyles, useTheme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport {useTranslation} from 'react-i18next';\nimport Home from \"../page/home\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    appBar: {\n        width: {drawerWidth},\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function Navbar() {\n    const classes = useStyles();\n    const {t, i18n} = useTranslation();\n    const theme = useTheme();\n\n    //侧边栏打开、关闭状态\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={menuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}>\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Web of Things\n                    </Typography>\n\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{'aria-label': 'search'}}\n                        />\n                    </div>\n                    <div className={classes.grow}/>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon/>\n                            </Badge>\n                        </IconButton>\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon/>\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon/>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                width={drawerWidth}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                    </IconButton>\n                </div>\n                <Divider/>\n\n                <List>\n                    <ListItem button key={\"home\"}>\n                        <ListItemIcon>\n                            <HomeIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={t('Home')}/>\n                    </ListItem>\n\n                    <ListItem button key={\"rules\"}>\n                        <ListItemIcon>\n                            <AlarmOnIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={t('Rules')}/>\n                    </ListItem>\n\n\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider/>\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            {renderMobileMenu}\n            {renderMenu}\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Home/>\n            </main>\n\n\n        </div>\n    );\n}\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":20,"column":8,"nodeType":"83","messageId":"84","endLine":20,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":44,"column":12,"nodeType":"83","messageId":"84","endLine":44,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":88,"column":7,"nodeType":"88","endLine":88,"endColumn":9,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":107,"column":12,"nodeType":"88","endLine":107,"endColumn":14,"suggestions":"91"},{"ruleId":"81","severity":1,"message":"92","line":110,"column":11,"nodeType":"83","messageId":"84","endLine":110,"endColumn":31},{"ruleId":"81","severity":1,"message":"93","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"94","line":32,"column":7,"nodeType":"88","endLine":32,"endColumn":9,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":38,"column":32,"nodeType":"98","messageId":"99","endLine":38,"endColumn":34},{"ruleId":"96","severity":1,"message":"97","line":41,"column":32,"nodeType":"98","messageId":"99","endLine":41,"endColumn":34},{"ruleId":"81","severity":1,"message":"100","line":7,"column":12,"nodeType":"83","messageId":"84","endLine":7,"endColumn":16},{"ruleId":"81","severity":1,"message":"101","line":7,"column":18,"nodeType":"83","messageId":"84","endLine":7,"endColumn":23},{"ruleId":"75","replacedBy":"102"},{"ruleId":"77","replacedBy":"103"},{"ruleId":"81","severity":1,"message":"104","line":154,"column":15,"nodeType":"83","messageId":"84","endLine":154,"endColumn":19},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"no-unused-vars","'TopBar' is defined but never used.","Identifier","unusedVar","'modalStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'InitThing' and 'thing'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useCallback has missing dependencies: 'handleSendMessage' and 'props.thing.id'. Either include them or remove the dependency array.",["108"],"'propertyValueChanged' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'update'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["109"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'name' is assigned a value but never used.","'value' is assigned a value but never used.",["105"],["106"],"'i18n' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [InitThing, thing]",{"range":"116","text":"117"},"Update the dependencies array to be: [handleSendMessage, props.thing.id]",{"range":"118","text":"119"},"Update the dependencies array to be: [props, update]",{"range":"120","text":"121"},[2180,2182],"[InitThing, thing]",[2725,2727],"[handleSendMessage, props.thing.id]",[1083,1085],"[props, update]"]