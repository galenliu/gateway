{
  "version": 3,
  "sources": [
    "views/things.tsx",
    "views/rules.tsx",
    "views/settings.tsx",
    "components/menu.tsx",
    "components/adapter.tsx",
    "api/index.js",
    "views/addons.jsx",
    "App.tsx",
    "reportWebVitals.ts",
    "i18n.js",
    "index.tsx"
  ],
  "names": [
    "Things",
    "useTranslation",
    "t",
    "i18n",
    "Rules",
    "React",
    "Component",
    "Settings",
    "id",
    "className",
    "to",
    "Menu",
    "props",
    "useState",
    "menuBtnShow",
    "menuListShow",
    "menuScrimShow",
    "state",
    "setState",
    "hidden",
    "Fragment",
    "onClick",
    "activeClassName",
    "Adapter",
    "name",
    "version",
    "description",
    "href",
    "homepage_url",
    "target",
    "rel",
    "author",
    "data-license-href",
    "license",
    "isUpdate",
    "enabled",
    "API",
    "getJson",
    "url",
    "fetch",
    "method",
    "then",
    "res",
    "console",
    "log",
    "ok",
    "Error",
    "status",
    "json",
    "getAddonsInfo",
    "this",
    "getInstalledAddons",
    "Addons",
    "Map",
    "installedAddons",
    "setInstalledAddons",
    "availableAddons",
    "setAvailableAddons",
    "useEffect",
    "body",
    "installedList",
    "s",
    "set",
    "err",
    "error",
    "catch",
    "data",
    "urls",
    "architecture",
    "node_version",
    "params",
    "URLSearchParams",
    "python_version",
    "promises",
    "push",
    "toString",
    "headers",
    "Accept",
    "Promise",
    "all",
    "responses",
    "resp",
    "bodies",
    "availableList",
    "addon",
    "entry",
    "license_url",
    "checksum",
    "primary_type",
    "installed",
    "has",
    "compareSemver",
    "get",
    "fetchAvailableAddonList",
    "isDiscover",
    "setDiscover",
    "adapterList",
    "list",
    "adapter",
    "exec",
    "updata",
    "schema",
    "readerInstalledAddonsList",
    "undefined",
    "App",
    "path",
    "exact",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "use",
    "initReactI18next",
    "init",
    "resources",
    "en",
    "translation",
    "zh_CN",
    "lng",
    "keySeparator",
    "interpolation",
    "escapeValue",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.bb10f89b.chunk.js",
  "sourcesContent": [
    "import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../css/settings.css\";\n\ninterface addonProps {\n    name: string,\n    version: string,\n    description: string,\n    author: string,\n    license_url: string,\n    homepage_url:string,\n    primary_type:string,\n    checksum :string,\n    url:string,\n}\n\n\n\n// @ts-ignore\nconst Things: React.FC=()=> {\n\n    const {t, i18n} = useTranslation();\n\n\n    return (\n        <>\n            <h1>Things</h1>\n        </>\n    )\n}\n\n\n\n\n\nexport default Things;",
    "\nimport React from 'react'\n\n\nexport default class Rules extends React.Component<any, any>{\n\n    render() {\n        return <h1>rules</h1>\n    }\n\n}",
    "import React from 'react'\nimport {useTranslation} from \"react-i18next\";\nimport {Link} from \"react-router-dom\";\nimport \"../css/settings.css\";\n\n\nconst Settings: React.FC = () => {\n\n    const {t, i18n} = useTranslation();\n\n    return (\n        <>\n            <nav id=\"settings-menu\" className=\"settings-section\">\n\n                <ul>\n                    <li className=\"settings-item\"><Link id=\"domain-settings-link\"\n                                                        to=\"/settings/domain\">{t(\"Domain\")}</Link></li>\n                    <li className=\"settings-item\"><Link id=\"network-settings-link\"\n                                                        to=\"/settings/network\">{t(\"Network\")}</Link></li>\n                    <li className=\"settings-item\"><Link id=\"user-settings-link\" to=\"/settings/users\">{t(\"Users\")}</Link>\n                    </li>\n                    <li className=\"settings-item\"><Link id=\"addon-settings-link\"\n                                                        to=\"/settings/addons\">{t(\"Addons\")}</Link></li>\n\n                    <li className=\"settings-item\"><Link id=\"localization-settings-link\"\n                                                        to=\"/settings/localization\">{t(\"Localization\")}</Link></li>\n                    <li className=\"settings-item\"><Link id=\"update-settings-link\"\n                                                        to=\"/settings/updates\">{t(\"Updates\")}</Link></li>\n                    <li className=\"settings-item\"><Link id=\"authorization-settings-link\"\n                                                        to=\"/settings/authorizations\">{t(\"Authorizations\")}</Link>\n                    </li>\n                    <li className=\"settings-item\"><Link id=\"experiment-settings-link\"\n                                                        to=\"/settings/experiments\">{t(\"Experiments\")}</Link></li>\n                    <li className=\"settings-item\"><Link id=\"developer-settings-link\"\n                                                        to=\"/settings/developer\">{t(\"Developer\")}</Link></li>\n                </ul>\n            </nav>\n        </>\n    );\n}\n\nexport default Settings",
    "import React, {useState, useRef, MutableRefObject, RefObject, useEffect, useCallback} from \"react\";\nimport \"../css/menu.css\"\nimport {useTranslation} from 'react-i18next';\nimport {NavLink, useLocation} from 'react-router-dom'\nimport { useGlobalState } from '../state'\n\ninterface IStataController {\n    menuBtnShow: boolean,\n    menuListShow: boolean,\n    menuScrimShow: boolean,\n}\n\nconst Menu: React.FC = props => {\n\n    const {t, i18n} = useTranslation();\n\n    function initState():IStataController{\n        return {\n            menuBtnShow: true,\n            menuListShow: false,\n            menuScrimShow: false,\n        }\n    }\n\n    const [state, setState] = useState<IStataController>(initState());\n\n\n\n    function hidden() {\n        setState({\n            menuBtnShow: state.menuBtnShow,\n            menuListShow: false,\n            menuScrimShow: false,\n        })\n\n    }\n\n    function toggleMenu() {\n        setState({\n            menuBtnShow: state.menuBtnShow,\n            menuListShow: !state.menuListShow,\n            menuScrimShow: !state.menuScrimShow,\n        })\n    }\n\n    const MenuHidden =() =>{\n        setState({\n            menuBtnShow: false,\n            menuListShow: state.menuListShow,\n            menuScrimShow: state.menuScrimShow,\n        })\n    }\n\n    return (\n        <React.Fragment>\n             <div  id=\"menu-scrim\" onClick={hidden} className={state.menuScrimShow ? \"\": \"hidden\"}/>\n            <button onClick={toggleMenu} id=\"menu-button\" className={state.menuBtnShow ? \"icon-button\": \"icon-button hidden\"} />\n             <nav id=\"main-menu\" className={state.menuScrimShow? \"\": \"hidden\"}>\n                <ul>\n                    <li>\n                        <NavLink onClick={() => {\n                            hidden()\n                        }} id=\"things-menu-item\" to=\"/things\" activeClassName=\"selected\">{t('Things')} </NavLink>\n                    </li>\n                    <li>\n                        <NavLink onClick={() => {\n                            hidden()\n                        }} id=\"rules-menu-item\" to=\"/rules\" activeClassName=\"selected\">{t('Rules')}</NavLink>\n                    </li>\n                    <li>\n                        <NavLink onClick={() => {\n                            hidden()\n                        }} id=\"settings-menu-item\" to=\"/settings\" activeClassName=\"selected\">{t('Settings')}</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </React.Fragment>\n    )\n};\n\n\n\n\nexport default Menu;",
    "import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../css/settings.css\";\n\ninterface adapterInfo {\n    name: string,\n    version: string,\n    description: string,\n    homepage_url: string,\n    author: string,\n    license: string,\n    enabled: boolean,\n    isUpdate:boolean,\n}\n\nconst Adapter: React.FC<adapterInfo> = props => {\n\n    const { t, i18n } = useTranslation();\n\n    return <li className=\"addon-item\">\n        <div className=\"addon-settings-header adapter\">\n            <span className=\"addon-settings-name\">{props.name}</span>\n            <span className=\"addon-settings-version\">{props.version}</span>\n            <span className=\"addon-settings-description\">{props.description}</span>\n            <span className=\"addon-settings-author\">{t(`author`)}\n                <a href={props.homepage_url} target=\"_blank\" rel=\"noopener\">{props.author}</a>\n            </span>\n            <span className=\"addon-settings-license\"\n                  data-license-href={props.license}>({t('license')})\n           </span>\n        </div>\n        <div className=\"addon-settings-controls\">\n            <button className=\"text-button addon-settings-config \"\n            >{t('configure')}\n            </button>\n            {props.isUpdate && <button\n                className=\"text-button addon-settings-update\">{t(\"update\")}\n            </button>}\n            <span className=\"addon-settings-spacer\"></span>\n            <button className=\"text-button addon-settings-remove\"\n            >{t(\"remove\")}\n            </button>\n            <button className={ props.enabled? \"text-button addon-settings-disable\": \"text-button addon-settings-enable\" }>\n                {props.enabled? t(\"disable\"):t(\"enable\")}\n            </button>\n        </div>\n    </li>\n}\n\n\n\n\n\nexport default Adapter;\n\n",
    "\nconst API = {\n\n    getJson(url) {\n        const opts = {\n            method: 'GET',\n        };\n        return fetch(url, opts).then((res) => {\n            console.log(\"fetch getJson api:\",url)\n            if (!res.ok) {\n                throw new Error(res.status);\n            }\n            return res.json();\n        });\n    },\n\n\n    getAddonsInfo() {\n        return this.getJson(\"/settings/addons_info\")\n    },\n\n    getInstalledAddons() {\n        return this.getJson(\"/addons\")\n    }\n\n\n}\n\nexport default API",
    "import React, {useEffect, useState} from \"react\";\nimport \"../css/settings.css\"\nimport Adapter from \"../components/adapter\";\nimport {Link} from \"react-router-dom\";\nimport Addon from \"../components/addon\";\nimport API from \"../api\"\n\n\n// Adapter like this\n//------------\n// author: \"Tim Hellhake\"\n// description: \"Runs for the specified number of seconds\"\n// enabled: true\n// exec: \"{nodeLoader} {path}\"\n// homepage_url: \"https://github.com/tim-hellhake/timer-adapter#readme\"\n// id: \"timer-adapter\"\n// name: \"Timer\"\n// primary_type: \"adapter\"\n// version: \"1.6.1\"\n//----------------\n\n\n// Addon like this\n//------------\n// \"id\": \"yo-notifier\",\n// \"name\": \"Yo\",\n// \"description\": \"Send a Yo to your phone (gateway >= 0.9.0 only)\",\n// \"author\": \"Tim Hellhake\",\n// \"homepage_url\": \"https://github.com/tim-hellhake/yo-notifier#readme\",\n// \"license_url\": \"https://raw.githubusercontent.com/tim-hellhake/yo-notifier/master/LICENSE\",\n// \"version\": \"0.1.4\",\n//\"url\": \"https://github.com/tim-hellhake/yo-notifier/releases/download/0.1.4/yo-notifier-0.1.4.tgz\",\n// \"checksum\": \"83fb9753956b6e786137d294d801b4589971a53b5c6f04618bd3855ddeea5862\",\n// \"primary_type\": \"notifier\"\n//------------\n\n\nconst Addons = () => {\n\n    const [installedAddons, setInstalledAddons] = useState(new Map())\n    const [availableAddons, setAvailableAddons] = useState(new Map())\n\n\n    //获取到的gateway已安装的addons\n    const [currentAddonsList, setCurrentAddonList] = useState()\n\n    function fetchInstalledAddonsList() {\n        console.log(\"begin fetch the installed addon list\")\n        API.getInstalledAddons().then(body => {\n            if (!body) {\n                return;\n            }\n            let installedList = new Map()\n            for (const s of body) {\n                try {\n                    installedList.set(s.id, s)\n                } catch (err) {\n                    console.error(`Failed to parse add-on settings: ${err}`);\n                }\n            }\n            setInstalledAddons(installedList)\n        }).catch((err)=>{\n            console.log(\"fetch the installed addon list err:\",err)\n        })\n    }\n\n    function fetchAvailableAddonList() {\n        API.getAddonsInfo().then((data) => {\n            if (!data || !data.urls || !data.architecture || !data.version ||\n                !data.node_version) {\n                return;\n            }\n            console.log(data, \"data.....\")\n            const params = new URLSearchParams();\n            params.set('arch', data.architecture);\n            params.set('version', data.version);\n            params.set('node', data.node_version);\n            params.set('python', data.python_version);\n            const promises = [];\n            for (const url of data.urls) {\n                console.log(url)\n                promises.push(fetch(`${url}?${params.toString()}`, {\n                    method: 'GET',\n                    headers: {\n                        Accept: 'application/json',\n                    },\n                }));\n            }\n\n            return Promise.all(promises)\n        }).then(\n            (responses) => {\n                console.log(responses)\n                const promises = []\n                for (const resp of responses) {\n                    promises.push(resp.json())\n                }\n                return Promise.all(promises)\n            }).then((bodies) => {\n                let availableList = availableAddons\n                for (const body of bodies) {\n                    for (const addon of body) {\n                        const entry = {\n                            id: addon.id,\n                            name: addon.name,\n                            description: addon.description,\n                            author: addon.author,\n                            homepage_url: addon.homepage_url,\n                            license_url: addon.license,\n                            version: addon.version,\n                            url: addon.url,\n                            checksum: addon.checksum,\n                            primary_type: addon.primary_type,\n                            installed: installedAddons.has(addon.id)\n                        }\n                        if (availableList.has(addon.id) &&\n                            this.compareSemver(availableList.get(addon.id).version,\n                                entry.version) >= 0) {\n                            continue;\n                        }\n                        availableList.set(addon.id, entry)\n\n                    }\n                }\n                setAvailableAddons(availableList);\n            }\n        )\n    }\n\n    function readerInstalledAddonsList(adapterList) {\n        const list = []\n        for (const [id, adapter] of adapterList) {\n            const addon = <Adapter key={id}\n                                   name={adapter.name}\n                                   author={adapter.author}\n                                   description={adapter.description}\n                                   homepage_url={adapter.homepage_url}\n                                   license={adapter.license_url}\n                                   version={adapter.version}\n                                   primary_type={adapter.primary_type}\n                                   exec={adapter.exec}\n                                   enabled={adapter.enabled}\n                                   updata={false}\n                                   schema={adapter.schema}\n                                   isUpdate={adapter.isUpdate}\n            />\n            list.push(addon)\n        }\n        return list\n    }\n\n    function readerAvailableAddonsList(addonsList) {\n\n        let addonList = []\n        for (const [id, entry] of addonsList) {\n            const addon =\n                <Addon key={id}\n                       name={entry.name}\n                       author={entry.author}\n                       description={entry.description}\n                       homepage_url={entry.homepage_url}\n                       license_url={entry.license_url}\n                       version={entry.version}\n                       primary_type={entry.primary_type}\n                       checksum={entry.checksum}\n                       url={entry.url}/>\n            addonList.push(addon)\n        }\n        return addonList\n    }\n\n\n    useEffect(() => {\n        fetchInstalledAddonsList()\n        fetchAvailableAddonList()\n    }, [])\n\n\n    const [isDiscover, setDiscover] = useState(false);\n\n    return (\n        <>\n            <section id=\"addon-settings\" className=\"settings-section\">\n\n                <section id=\"addon-main-settings\"\n                         className={isDiscover ? \"settings-subsection hidden\" : \"settings-subsection\"}>\n                    <button id=\"discover-addons-button\" onClick={() => setDiscover(true)}\n                            className=\"icon-button right-top-button\"/>\n                    <Link to=\"/settings\">\n                        <button id=\"back-button\" className=\"icon-button\"/>\n                    </Link>\n                    <ul id=\"installed-addons-list\">\n                        {\n                            installedAddons && readerInstalledAddonsList(installedAddons)\n                        };\n                    </ul>\n                </section>\n\n                {/*<section id=\"addon-config-settings\" className=\"hidden settings-subsection\"/>*/}\n\n\n                <section id=\"addon-discovery-settings\"\n                         className={isDiscover ? \"settings-subsection\" : \"settings-subsection hidden\"}>\n\n                    <button onClick={() => setDiscover(false)} id=\"back-button\" className=\"icon-button\"/>\n\n                    <div id=\"addon-discovery-container\" className=''>\n                        <input id=\"discovered-addons-search\" className=\"hidden\"/>\n                        <ul id=\"discovered-addons-list\">\n                            {availableAddons && undefined && readerAvailableAddonsList(availableAddons)};\n                        </ul>\n                    </div>\n                </section>\n\n            </section>\n        </>\n    );\n}\n\n\nexport default Addons;",
    "import React, {useReducer, useContext, useRef, useState} from 'react';\nimport './App.css';\nimport Things from './views/things'\nimport Rules from './views/rules'\nimport Settings from './views/settings'\nimport Menu from \"./components/menu\";\nimport {BrowserRouter as Router, Route, Link, Switch, StaticRouter} from 'react-router-dom'\nimport Addons from './views/addons'\n\n\nfunction App() {\n    //const [state, dispatch] = useReducer(goto, {path: \"/things\"})\n\n    return (\n        <Router>\n            <Switch>\n\n                <Route path=\"/things\">\n                    <Menu/>\n                    <Things/>\n                </Route>\n                <Route path=\"/rules\">\n                    <Menu/>\n                    <Rules/>\n                </Route>\n                <Route exact path=\"/settings\">\n                    <Menu/>\n                    <Settings/>\n                </Route>\n                <Route path=\"/settings/addons\">\n                    <Addons/>\n                </Route>\n                <Route path=\"/\">\n                    <Menu/>\n                    <Things/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\n\nexport default App;\n",
    "import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n    en: {\n        translation: {\n            \"Things\": \"Things\",\n            \"Rules\": \"Rules\",\n            \"Settings\": \"Settings\",\n            \"Domain\": \"Domain\",\n            \"Network\": \"Network\",\n            \"Users\": \"Users\",\n            \"Addons\": \"Addons\",\n            \"Localization\": \"Localization\",\n            \"Updates\": \"Updates\",\n            \"Authorizations\": \"Authorizations\",\n            \"Experiments\": \"Experiments\",\n            \"Developer\": \"Developer\",\n            \"author\": \"by\",\n            \"license\": \"license\",\n            \"configure\": \"configure\",\n            \"update\": \"update\",\n            \"remove\": \"remove\",\n            \"disable\": \"disable\",\n            \"enable\": \"enable\",\n            \"add\": \"Add\",\n        }\n    },\n    zh_CN: {\n        translation: {\n            \"Things\": \"设备\",\n            \"Rules\": \"规则\",\n            \"Settings\": \"设置\",\n            \"Domain\": \"区域\",\n            \"Network\": \"网络\",\n            \"Users\": \"用户\",\n            \"Addons\": \"附加组件\",\n            \"Localization\": \"本地化\",\n            \"Updates\": \"更新\",\n            \"Authorizations\": \"授权\",\n            \"Experiments\": \"实验\",\n            \"Developer\": \"开发者\",\n            \"author\": \"作者:\",\n            \"license\": \"(许可协议)\",\n            \"configure\": \"配置\",\n            \"update\": \"更新\",\n            \"remove\": \"移除\",\n            \"disable\": \"禁用\",\n            \"enable\": \"启用\",\n            \"add\": \"添加\",\n        }\n    }\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: \"zh_CN\",\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n;",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
